function dsp48e_AB_splitter_init_xblock(blk, varargin)
%% inports
inport1 = xInport('A:B');

%% outports
A = xOutport('A');
B = xOutport('B');

%% diagram

% block: untitled3/dsp48e_AB_splitter_init_xblock/Reinterpret1
Slice3_out1 = xSignal('Slice3_out1');
Reinterpret1 = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret1'), ...
                             struct('force_arith_type', 'on', ...
                                    'arith_type', 'Signed  (2''s comp)', ...
                                    'force_bin_pt', 'on'), ...
                             {Slice3_out1}, ...
                             {B});

% block: untitled3/dsp48e_AB_splitter_init_xblock/Reinterpret2
Slice1_out1 = xSignal('Slice1_out1');
Reinterpret2 = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret2'), ...
                             struct('force_arith_type', 'on', ...
                                    'arith_type', 'Signed  (2''s comp)', ...
                                    'force_bin_pt', 'on'), ...
                             {Slice1_out1}, ...
                             {A});

% block: untitled3/dsp48e_AB_splitter_init_xblock/Slice1
Slice1 = xBlock(struct('source', 'Slice', 'name', 'Slice1'), ...
                       struct('nbits', 30, ...
                              'mode', 'Lower Bit Location + Width', ...
                              'bit0', 18), ...
                       {inport1}, ...
                       {Slice1_out1});

% block: untitled3/dsp48e_AB_splitter_init_xblock/Slice3
Slice3 = xBlock(struct('source', 'Slice', 'name', 'Slice3'), ...
                       struct('nbits', 18, ...
                              'mode', 'Lower Bit Location + Width'), ...
                       {inport1}, ...
                       {Slice3_out1});



end

