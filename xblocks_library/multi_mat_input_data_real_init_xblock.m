function multi_mat_input_real_data_init_xblock(blk, varargin)
defaults = {'var_name', 'var', ...
    'n_bits', 36, ...
    'bin_pt', 0, ...
    'quantization', 'Truncate', ...
    'overflow', 'Wrap', ...
    'arith_type', 'Signed  (2''s comp)', ...
    'numerical_type', 'Fixed-point', ...
    'n_inputs', 0, ...
};

var_name = get_var('var_name', 'defaults', defaults, varargin{:});
arith_type = get_var('arith_type', 'defaults', defaults, varargin{:});
n_bits = get_var('n_bits', 'defaults', defaults, varargin{:});
bin_pt = get_var('bin_pt', 'defaults', defaults, varargin{:});
quantization = get_var('quantization', 'defaults', defaults, varargin{:});
overflow = get_var('overflow', 'defaults', defaults, varargin{:});
numerical_type = get_var('numerical_type', 'defaults', defaults, varargin{:});
n_inputs = get_var('n_inputs', 'defaults', defaults, varargin{:});


%% diagram

for k=1:n_inputs
    var_name_k = sprintf('%s%d', var_name, k);
    blk_name_k = sprintf('from_workspace_%d', k);
    dout_k = xOutport(var_name_k);
    xBlock(struct('name', blk_name_k, 'source', @mat_input_data_init_xblock), ...
        {subblockname(blk, blk_name_k), 'var_name', var_name_k, ...
            'arith_type', arith_type, 'n_bits', n_bits, 'bin_pt', bin_pt, ...
            'quantization', quantization, 'overflow', overflow, ...
            'numerical_type', numerical_type}, ...
        {}, {dout_k});
end
