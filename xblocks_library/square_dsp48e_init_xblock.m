function square_dsp48e_init_xblock(blk, varargin)

%% inports
c = xInport('c');

%% outports
p = xOutport('p');

%% diagram

% block: untitled1/square_dsp48e/Constant1
Constant1_out1 = xSignal('Constant1_out1');
Constant1 = xBlock(struct('source', 'Constant', 'name', 'Constant1'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 4, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant1_out1});

% block: untitled1/square_dsp48e/Constant2
Constant2_out1 = xSignal('Constant2_out1');
Constant2 = xBlock(struct('source', 'Constant', 'name', 'Constant2'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 4, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant2_out1});

% block: untitled1/square_dsp48e/Constant3
Constant3_out1 = xSignal('Constant3_out1');
Constant3 = xBlock(struct('source', 'Constant', 'name', 'Constant3'), ...
                          struct('const', 21, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 7, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant3_out1});

% block: untitled1/square_dsp48e/Constant4
Constant4_out1 = xSignal('Constant4_out1');
Constant4 = xBlock(struct('source', 'Constant', 'name', 'Constant4'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 3, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant4_out1});

% block: untitled1/square_dsp48e/Constant5
Constant5_out1 = xSignal('Constant5_out1');
Constant5 = xBlock(struct('source', 'Constant', 'name', 'Constant5'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 1, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant5_out1});

% block: untitled1/square_dsp48e/Constant6
Constant6_out1 = xSignal('Constant6_out1');
Constant6 = xBlock(struct('source', 'Constant', 'name', 'Constant6'), ...
                          struct('const', 5, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 7, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant6_out1});

% block: untitled1/square_dsp48e/Constant7
Constant7_out1 = xSignal('Constant7_out1');
Constant7 = xBlock(struct('source', 'Constant', 'name', 'Constant7'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 3, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant7_out1});

% block: untitled1/square_dsp48e/Constant8
Constant8_out1 = xSignal('Constant8_out1');
Constant8 = xBlock(struct('source', 'Constant', 'name', 'Constant8'), ...
                          struct('const', 0, ...
                                 'arith_type', 'Unsigned', ...
                                 'n_bits', 1, ...
                                 'bin_pt', 0), ...
                          {}, ...
                          {Constant8_out1});

% block: untitled1/square_dsp48e/Convert
reinterp_real_out1 = xSignal('reinterp_real_out1');
Convert_out1 = xSignal('Convert_out1');
Convert = xBlock(struct('source', 'Convert', 'name', 'Convert'), ...
                        struct('n_bits', 30, ...
                               'bin_pt', 0), ...
                        {reinterp_real_out1}, ...
                        {Convert_out1});

% block: untitled1/square_dsp48e/Convert2
reinterp_imag_out1 = xSignal('reinterp_imag_out1');
Convert2_out1 = xSignal('Convert2_out1');
Convert2 = xBlock(struct('source', 'Convert', 'name', 'Convert2'), ...
                         struct('n_bits', 30, ...
                                'bin_pt', 0), ...
                         {reinterp_imag_out1}, ...
                         {Convert2_out1});

% block: untitled1/square_dsp48e/Convert3
Convert3_out1 = xSignal('Convert3_out1');
Convert3 = xBlock(struct('source', 'Convert', 'name', 'Convert3'), ...
                         struct('n_bits', 18, ...
                                'bin_pt', 0), ...
                         {reinterp_real_out1}, ...
                         {Convert3_out1});

% block: untitled1/square_dsp48e/Convert4
Convert4_out1 = xSignal('Convert4_out1');
Convert4 = xBlock(struct('source', 'Convert', 'name', 'Convert4'), ...
                         struct('n_bits', 18, ...
                                'bin_pt', 0), ...
                         {reinterp_imag_out1}, ...
                         {Convert4_out1});

% block: untitled1/square_dsp48e/DSP48E_0
DSP48E_0_out2 = xSignal('DSP48E_0_out2');
DSP48E_0 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_0'), ...
                         struct('use_pcout', 'on'), ...
                         {Convert2_out1, Convert4_out1, Constant6_out1, Constant1_out1, Constant8_out1, Constant7_out1}, ...
                         {[], DSP48E_0_out2});

% block: untitled1/square_dsp48e/DSP48E_1
DSP48E_1_out1 = xSignal('DSP48E_1_out1');
DSP48E_1 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_1'), ...
                         struct('use_pcin', 'on', ...
                                'pipeline_a', '2', ...
                                'pipeline_b', '2'), ...
                         {Convert_out1, Convert3_out1, DSP48E_0_out2, Constant3_out1, Constant2_out1, Constant5_out1, Constant4_out1}, ...
                         {DSP48E_1_out1});

% block: untitled1/square_dsp48e/reinterp_imag
reinterp_imag = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_imag'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)'), ...
                              {c}, ...
                              {reinterp_imag_out1});

% block: untitled1/square_dsp48e/reinterp_power
slice_power_out1 = xSignal('slice_power_out1');
reinterp_power = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_power'), ...
                               struct('force_arith_type', 'on', ...
                                      'force_bin_pt', 'on', ...
                                      'bin_pt', 34), ...
                               {slice_power_out1}, ...
                               {p});

% block: untitled1/square_dsp48e/reinterp_real
reinterp_real = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_real'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)'), ...
                              {c}, ...
                              {reinterp_real_out1});

% block: untitled1/square_dsp48e/slice_power
slice_power = xBlock(struct('source', 'Slice', 'name', 'slice_power'), ...
                            struct('nbits', 36, ...
                                   'mode', 'Lower Bit Location + Width'), ...
                            {DSP48E_1_out1}, ...
                            {slice_power_out1});

end

