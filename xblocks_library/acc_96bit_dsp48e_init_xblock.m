function acc_96bit_dsp48e_init_xblock(blk, varargin)
defaults = {'bin_pt', 17};
bin_pt = get_var('bin_pt', 'defaults', defaults, varargin{:});

%% inports
sync = xInport('sync');
b = xInport('b');

%% outports
outport1 = xOutport('+=b');

%% diagram

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Convert
Convert_out1 = xSignal('Convert_out1');
Convert = xBlock(struct('source', 'Convert', 'name', 'Convert'), ...
                        struct('n_bits', 96, ...
                               'bin_pt', bin_pt), ...
                        {b}, ...
                        {Convert_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/DSP48E_0
DSP48_AB_splitter1_out1 = xSignal('DSP48_AB_splitter1_out1');
DSP48_AB_splitter1_out2 = xSignal('DSP48_AB_splitter1_out2');
Reinterpret_out1 = xSignal('Reinterpret_out1');
Mux_out1 = xSignal('Mux_out1');
dsp48e_ctrl0_out2 = xSignal('dsp48e_ctrl0_out2');
dsp48e_ctrl0_out3 = xSignal('dsp48e_ctrl0_out3');
dsp48e_ctrl0_out4 = xSignal('dsp48e_ctrl0_out4');
DSP48E_0_out1 = xSignal('DSP48E_0_out1');
DSP48E_0_out2 = xSignal('DSP48E_0_out2');
DSP48E_0 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_0'), ...
                         struct('use_creg', 'on', ...
                                'use_carryout', 'on'), ...
                         {DSP48_AB_splitter1_out1, DSP48_AB_splitter1_out2, Reinterpret_out1, Mux_out1, dsp48e_ctrl0_out2, dsp48e_ctrl0_out3, dsp48e_ctrl0_out4}, ...
                         {DSP48E_0_out1, DSP48E_0_out2});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/DSP48E_1
DSP48_AB_splitter2_out1 = xSignal('DSP48_AB_splitter2_out1');
DSP48_AB_splitter2_out2 = xSignal('DSP48_AB_splitter2_out2');
Delay1_out1 = xSignal('Delay1_out1');
dsp48e_ctrl1_out2 = xSignal('dsp48e_ctrl1_out2');
dsp48e_ctrl1_out4 = xSignal('dsp48e_ctrl1_out4');
DSP48E_1_out1 = xSignal('DSP48E_1_out1');
DSP48E_1 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_1'), ...
                         struct('pipeline_a', '2', ...
                                'pipeline_b', '2', ...
                                'pipeline_carryin', 'off'), ...
                         {DSP48_AB_splitter2_out1, DSP48_AB_splitter2_out2, Delay1_out1, dsp48e_ctrl1_out2, DSP48E_0_out2, dsp48e_ctrl1_out4}, ...
                         {DSP48E_1_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/DSP48_AB_splitter1
zero_out1 = xSignal('zero_out1');
DSP48_AB_splitter1 = xBlock(struct('source', str2func('dsp48e_AB_splitter_init_xblock'), 'name', 'DSP48_AB_splitter1'), ...
                                   [], ...
                                   {zero_out1}, ...
                                   {DSP48_AB_splitter1_out1, DSP48_AB_splitter1_out2});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Delay1
Mux1_out1 = xSignal('Mux1_out1');
Delay1 = xBlock(struct('source', 'Delay', 'name', 'Delay1'), ...
                       [], ...
                       {Mux1_out1}, ...
                       {Delay1_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Mux
dsp48e_ctrl0_out1 = xSignal('dsp48e_ctrl0_out1');
opmode_0_rst_out1 = xSignal('opmode_0_rst_out1');
Mux = xBlock(struct('source', 'Mux', 'name', 'Mux'), ...
                    [], ...
                    {sync, dsp48e_ctrl0_out1, opmode_0_rst_out1}, ...
                    {Mux_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Mux1
dsp48e_ctrl1_out1 = xSignal('dsp48e_ctrl1_out1');
opmode_1_rst_out1 = xSignal('opmode_1_rst_out1');
Mux1 = xBlock(struct('source', 'Mux', 'name', 'Mux1'), ...
                     [], ...
                     {sync, dsp48e_ctrl1_out1, opmode_1_rst_out1}, ...
                     {Mux1_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Register
Register_out1 = xSignal('Register_out1');
Register = xBlock(struct('source', 'Register', 'name', 'Register'), ...
                         [], ...
                         {DSP48E_0_out1}, ...
                         {Register_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Reinterpret
Slice_out1 = xSignal('Slice_out1');
Reinterpret = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret'), ...
                            struct('force_arith_type', 'on', ...
                                   'arith_type', 'Signed  (2''s comp)', ...
                                   'force_bin_pt', 'on'), ...
                            {Slice_out1}, ...
                            {Reinterpret_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Reinterpret1
Reinterpret1_out1 = xSignal('Reinterpret1_out1');
Reinterpret1 = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret1'), ...
                             struct('force_arith_type', 'on', ...
                                    'arith_type', 'Signed  (2''s comp)', ...
                                    'force_bin_pt', 'on'), ...
                             {Convert_out1}, ...
                             {Reinterpret1_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Reinterpret2
cram_out1 = xSignal('cram_out1');
Reinterpret2 = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret2'), ...
                             struct('force_arith_type', 'on', ...
                                    'arith_type', 'Signed  (2''s comp)', ...
                                    'force_bin_pt', 'on', ...
                                    'bin_pt', bin_pt), ...
                             {cram_out1}, ...
                             {outport1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Slice
Slice = xBlock(struct('source', 'Slice', 'name', 'Slice'), ...
                      struct('nbits', 48, ...
                             'mode', 'Lower Bit Location + Width'), ...
                      {Reinterpret1_out1}, ...
                      {Slice_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/Slice2
Slice2_out1 = xSignal('Slice2_out1');
Slice2 = xBlock(struct('source', 'Slice', 'name', 'Slice2'), ...
                       struct('nbits', 48, ...
                              'mode', 'Lower Bit Location + Width', ...
                              'bit0', 48), ...
                       {Reinterpret1_out1}, ...
                       {Slice2_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/cram
cram = xBlock(struct('source', str2func('cram_init_xblock'), 'name', 'cram'), ...
                     {[], 2}, ...
                     {DSP48E_1_out1, Register_out1}, ...
                     {cram_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/opmode_0_rst
opmode_0_rst = xBlock(struct('source', 'Constant', 'name', 'opmode_0_rst'), ...
                             struct('const', bin2dec('0001100'), ...
                                    'arith_type', 'Unsigned', ...
                                    'n_bits', 7, ...
                                    'bin_pt', 0, ...
                                    'explicit_period', 'on'), ...
                             {}, ...
                             {opmode_0_rst_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/opmode_1_rst
opmode_1_rst = xBlock(struct('source', 'Constant', 'name', 'opmode_1_rst'), ...
                             struct('const', bin2dec('0000011'), ...
                                    'arith_type', 'Unsigned', ...
                                    'n_bits', 7, ...
                                    'bin_pt', 0, ...
                                    'explicit_period', 'on'), ...
                             {}, ...
                             {opmode_1_rst_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/zero
zero = xBlock(struct('source', 'Constant', 'name', 'zero'), ...
                     struct('const', 0, ...
                            'n_bits', 48, ...
                            'bin_pt', 0, ...
                            'explicit_period', 'on'), ...
                     {}, ...
                     {zero_out1});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/DSP48_AB_splitter2
DSP48_AB_splitter2_sub = xBlock(struct('source', @dsp48e_AB_splitter_init_xblock, 'name', 'DSP48_AB_splitter2_sub'), {[]});
DSP48_AB_splitter2_sub.bindPort({Slice2_out1}, {DSP48_AB_splitter2_out1, DSP48_AB_splitter2_out2});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/dsp48e_ctrl0
dsp48e_ctrl0_sub = dsp48e_ctrl0('0101100', '0000', '0', '000', 'off');
dsp48e_ctrl0_sub.bindPort({}, {dsp48e_ctrl0_out1, dsp48e_ctrl0_out2, dsp48e_ctrl0_out3, dsp48e_ctrl0_out4});

% block: kurtosis_moment_calc/acc_96bit_dsp48e_init_xblock/dsp48e_ctrl1
dsp48e_ctrl1_sub = dsp48e_ctrl1('0100011', '0000', '0', '000', 'off');
dsp48e_ctrl1_sub.bindPort({}, {dsp48e_ctrl1_out1, dsp48e_ctrl1_out2, [], dsp48e_ctrl1_out4});



function xblock_obj = DSP48_AB_splitter2()


% Mask Initialization code
config.source = @dsp48e_AB_splitter_init_xblock;
xblock_obj = xBlock(config, {[]})


%% inports

%% outports

%% diagram



end

function xblock_obj = dsp48e_ctrl0(opmode, alumode, carryin, carryinsel, consolidate_ports)


consolidate_ports = strcmp(consolidate_ports, 'on');


% Mask Initialization code
config.source = @dsp48e_ctrl_init_xblock;
xblock_obj = xBlock(config, {[], 'opmode', opmode, ...
    'alumode', alumode, 'carryin', carryin, ...
    'carryinsel', carryinsel, ...
    'consolidate_ports', consolidate_ports});


%% inports

%% outports

%% diagram



end

function xblock_obj = dsp48e_ctrl1(opmode, alumode, carryin, carryinsel, consolidate_ports)


consolidate_ports = strcmp(consolidate_ports, 'on');


% Mask Initialization code
config.source = @dsp48e_ctrl_init_xblock;
xblock_obj = xBlock(config, {[], 'opmode', opmode, ...
    'alumode', alumode, 'carryin', carryin, ...
    'carryinsel', carryinsel, ...
    'consolidate_ports', consolidate_ports});


%% inports

%% outports

%% diagram



end

end

